[project]
name = "rpg-api"
version = "0.1.0"
description = ""
authors = [
    {name = "gustavo",email = "gustavosecardovelli@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi (>=0.115.14,<0.116.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)"
]

[tool.poetry]
packages = [{include = "rpg_api", from = "src"}]


[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
ruff = "^0.12.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = 'py312'
exclude = ['migrations', 'tests']

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint]
extend-select = [
    'E',  # Erros do pycodestyle (PEP 8)
    'F',  # Erros do pyflakes
    'W',  # Avisos do pycodestyle
    'Q',  # Regras de aspas (flake8-quotes)
    'I',  # Ordenação de imports (isort)
    'C',  # Complexidade de código (mccabe)
    'B',  # Bugs comuns (flake8-bugbear)
    'ANN',
    ]
ignore = ['B008']

[tool.ruff.lint.isort]
force-to-top = ['src']

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'single'

[tool.ruff.lint.mccabe]
max-complexity = 10
[tool.taskipy.tasks]
pre_test = 'task lint'
test = 'pytest -p no:warnings -vv'
lint = 'ruff check . ; ruff check . --diff'
format = 'ruff check . --fix ; ruff format .'
upgrade = 'alembic upgrade head'

